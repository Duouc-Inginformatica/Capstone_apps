graphhopper:
  datareader.file: data/santiago.osm.pbf
  graph.location: graph-cache

  # Importar todas las vias relevantes para el perfil peatonal
  import.osm.ignored_highways: ""

  # Encoded values usados por los custom models y la extraccion de detalles
  graph.encoded_values: road_class,road_environment,max_speed,road_access

  # Perfiles de enrutamiento habilitados
  profiles:
    - name: foot
      transport_mode: foot
      weighting: custom
      custom_model:
        speed:
          - if: true
            limit_to: 4.25  # 5 km/h * 0.85 = 4.25 km/h para accesibilidad
        distance_influence: 70

    - name: car
      transport_mode: car
      weighting: custom
      custom_model:
        speed:
          - if: true
            limit_to: 120  # Limitar a carreteras urbanas/regionales
        distance_influence: 35

    - name: bus
      transport_mode: car
      weighting: custom
      custom_model:
        speed:
          - if: true
            limit_to: 70  # Velocidad maxima tipica de buses urbanos
        priority:
          - if: road_class == MOTORWAY
            multiply_by: 0.7
          - if: road_class == TRUNK
            multiply_by: 0.8
        distance_influence: 45

    - name: pt
      transport_mode: foot
      weighting: custom
      custom_model:
        speed:
          - if: true
            limit_to: 80  # Velocidad maxima para buses/metro

    - name: metro
      transport_mode: car  # Usar car para seguir vías específicas (líneas de metro)
      weighting: custom
      custom_model:
        speed:
          - if: true
            limit_to: 40  # Velocidad promedio del Metro de Santiago (~40 km/h)
        priority:
          - if: road_class == MOTORWAY || road_class == TRUNK
            multiply_by: 0.1  # Evitar autopistas (metro usa túneles/vías dedicadas)
          - if: road_class == PRIMARY
            multiply_by: 1.5  # Preferir vías principales (aproximación a líneas metro)
        distance_influence: 20  # Priorizar velocidad sobre distancia (metro es más directo)

  # Ajustes del motor de transporte publico
  pt:
    enabled: true
    walk_speed: 4.0
    max_transfers: 4
    # OPTIMIZACIONES PARA RED TRANSANTIAGO
    max_walk_distance_per_leg: 1000  # Máximo 1km de caminata por tramo
    max_visited_nodes: 500000  # Reducir para respuestas más rápidas
    limit_solutions: 5  # Máximo 5 alternativas
    # Priorizar rutas con menos trasbordos
    transfer_penalty: 120  # Penalizar trasbordos (2 minutos extra por trasbordo)

  # ============================================================================
  # GTFS MEJORADO DE BUSMAPS (12,107 paradas, 418 rutas)
  # ============================================================================
  # Fuente: https://s3.transitpdf.com/files/uran/improved-gtfs-transantiago-metrodesantiago.zip
  # Vigencia: 2 Ago 2025 - 31 Dic 2025
  # Mejoras vs DTFS oficial:
  #   - +10% más paradas (12,107 vs 11,000)
  #   - +4.5% más rutas (418 vs 400)
  #   - >90% trips con shapes (vs ~70% DTPM)
  #   - Validado con MobilityData
  #   - Geometrías corregidas y enriquecidas
  # ============================================================================
  gtfs:
    file: data/gtfs-santiago.zip
    use_transfers_txt: true
    # CRÍTICO: Usar shapes mejorados de BusMaps para rutas precisas
    use_shapes: true
    # Configuración para Red Transantiago (BusMaps incluye 4 operadores)
    feed_id: transantiago_busmaps
    # Preferir rutas del feed mejorado
    prefer_feed: true
    # NUEVO: Configuraciones adicionales para GTFS mejorado
    max_transfer_distance: 500  # 500m máximo para transbordos
    interpolate_missing_times: true  # Interpolar horarios faltantes
    # Usar datos de accesibilidad (wheelchair_boarding)
    use_accessibility_info: true

  # Optimizaciones
  prepare:
    min_network_size: 200
    min_one_way_network_size: 200

  routing:
    max_visited_nodes: 1000000

# Configuracion del servidor DropWizard
server:
  application_connectors:
    - type: http
      port: 8989
  admin_connectors:
    - type: http
      port: 8990

